# -*- coding: utf-8 -*-
"""A_Z alphabet Recognition .ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Rmbi0kmWrnqeC3NpDRFO8ZvZbtTG8qUB
"""

from google.colab import drive

drive.mount('/content/drive')

import pandas as pd

import numpy as np

df_train = pd.read_csv('/content/drive/MyDrive/Dataset/A_Z Handwritten Data.csv.zip')

df_train.head()

y = df_train['0']
X = df_train.drop('0', axis=1, inplace=False)

import matplotlib.pyplot as plt

img = X.iloc[3].values.reshape(28,28)
plt.imshow(img)

X.shape

X = X/255

from tensorflow.keras.utils import to_categorical

y.shape

y = to_categorical(y, num_classes=26)
y.shape

y.shape

from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X,y,test_size=.2, random_state=18)

from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense

model = Sequential()
model.add(Dense(25, activation='relu', input_shape=(784,)))
model.add(Dense(30, activation='relu'))
model.add(Dense(26, activation='softmax'))
model.compile(optimizer="adam", loss='categorical_crossentropy', metrics=['accuracy'])

model.summary()

hist = model.fit(X_train, y_train, validation_data=(X_test, y_test), epochs=20, batch_size = 128)

plt.plot(hist.history['loss'], c='blue')
plt.plot(hist.history['val_loss'], c='red')

ip = X_test.iloc[0].values.reshape(1,784)

model.predict_on_batch(ip).argmax()

plt.imshow(ip.reshape(28,28))

import cv2 as cv

img = cv.imread('/content/drive/MyDrive/Dataset/A.png',0)

img

img = cv.resize(img,(28,28))

plt.imshow(img)

img = img/255

model.predict_on_batch(img.reshape(1,784)).argmax()

def predict_alphabet(path):
    img = cv.imread(path,0)
    img = cv.resize(img,(28,28))
    img = img/255
    return model.predict_on_batch(img.reshape(1,784)).argmax()

predict_alphabet('/content/drive/MyDrive/Dataset/C.png')

import os

model.predict_on_batch(ip).sum()

